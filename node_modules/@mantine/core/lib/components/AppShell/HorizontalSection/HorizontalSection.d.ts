import React from 'react';
import { Selectors, DefaultProps, MantineNumberSize, ForwardRefWithStaticComponents } from '@mantine/styles';
import { Section } from './Section/Section';
import useStyles, { HorizontalSectionPosition, HorizontalSectionWidth } from './HorizontalSection.styles';
export declare type HorizontalSectionStylesNames = Selectors<typeof useStyles>;
export interface HorizontalSectionSharedProps extends DefaultProps<HorizontalSectionStylesNames> {
    /** Component width with breakpoints */
    width?: HorizontalSectionWidth;
    /** Component height */
    height?: string | number;
    /** HorizontalSection content */
    children: React.ReactNode;
    /** Set position to fixed */
    fixed?: boolean;
    /** Position for fixed variant */
    position?: HorizontalSectionPosition;
    /** Breakpoint at which component will be hidden if hidden prop is true */
    hiddenBreakpoint?: MantineNumberSize;
    /** Set to true to hide component at hiddenBreakpoint */
    hidden?: boolean;
    /** z-index */
    zIndex?: number;
}
export interface HorizontalSectionProps extends HorizontalSectionSharedProps, Omit<React.ComponentPropsWithRef<'nav'>, 'children'> {
    section: 'navbar' | 'aside';
    __staticSelector: string;
}
declare type HorizontalSectionComponent = ForwardRefWithStaticComponents<HorizontalSectionProps, {
    Section: typeof Section;
}>;
export declare const HorizontalSection: HorizontalSectionComponent;
export {};
//# sourceMappingURL=HorizontalSection.d.ts.map