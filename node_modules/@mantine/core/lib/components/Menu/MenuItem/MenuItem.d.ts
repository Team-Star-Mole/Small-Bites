import React from 'react';
import { Selectors, PolymorphicComponentProps, DefaultProps, MantineColor } from '@mantine/styles';
import useStyles from './MenuItem.styles';
export declare type MenuItemStylesNames = Selectors<typeof useStyles>;
export interface SharedMenuItemProps extends DefaultProps {
    /** Item label */
    children: React.ReactNode;
    /** Icon rendered on the left side of label */
    icon?: React.ReactNode;
    /** Any color from theme.colors */
    color?: MantineColor;
    /** Any react node to render on the right side of item, for example, keyboard shortcut or badge */
    rightSection?: React.ReactNode;
    /** Is item disabled */
    disabled?: boolean;
}
interface _MenuItemProps extends SharedMenuItemProps, Omit<React.ComponentPropsWithoutRef<'button'>, keyof SharedMenuItemProps> {
    component: any;
}
export declare const _MenuItem: React.ForwardRefExoticComponent<_MenuItemProps & React.RefAttributes<HTMLButtonElement>>;
export declare type MenuItemProps<C> = PolymorphicComponentProps<C, SharedMenuItemProps>;
declare type MenuItemComponent = <C = 'button'>(props: MenuItemProps<C>) => React.ReactElement;
export declare const MenuItem: MenuItemComponent & {
    displayName?: string;
};
export {};
//# sourceMappingURL=MenuItem.d.ts.map